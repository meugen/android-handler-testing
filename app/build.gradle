plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'androidx.navigation.safeargs'
}
apply from: '../dependencies.gradle'

def signing = new Properties()
file('../keystore/signing.properties').withInputStream { signing.load(it) }

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "meugeninua.android.handler"
        minSdkVersion 21
        targetSdkVersion 30
        compileSdkVersion 30
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'BASE_URL', '"https://api.meugen.in.ua/"'
    }

    signingConfigs {
        debug {
            storeFile file('../keystore/handler.debug.jks')
            storePassword signing['handler.debug.store_password']
            keyAlias signing['handler.debug.key']
            keyPassword signing['handler.debug.key_password']
        }
        alpha {
            storeFile file('../keystore/handler.alpha.jks')
            storePassword signing['handler.alpha.store_password']
            keyAlias signing['handler.alpha.key']
            keyPassword signing['handler.alpha.key_password']
        }
        release {
            storeFile file('../keystore/handler.release.jks')
            storePassword signing['handler.release.store_password']
            keyAlias signing['handler.release.key']
            keyPassword signing['handler.release.key_password']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            debuggable true
        }
        alpha {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.alpha
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable true

            matchingFallbacks = ['release']
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
        }
    }

    flavorDimensions 'async'
    productFlavors {
        executors {
            dimension 'async'
            versionNameSuffix '-executors'
            applicationIdSuffix '.executors'
        }
        rxjava {
            dimension 'async'
            versionNameSuffix '-rxjava'
            applicationIdSuffix '.rxjava'
        }
        coroutines {
            dimension 'async'
            versionNameSuffix '-coroutines'
            applicationIdSuffix '.coroutines'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation project(':repository')
    implementation project(':utils')
    executorsImplementation project(':async-executors')
    rxjavaImplementation project(':async-rxjava')
    coroutinesImplementation project(':async-coroutines')

    implementation dagger.main
    implementation dagger.android
    annotationProcessor dagger.compiler
    annotationProcessor dagger.androidCompiler

    implementation navigation.fragment
    implementation navigation.ui

    implementation androidx.appcompat
    implementation androidx.material
    implementation androidx.constraintlayout

    implementation platform(firebase.bom)
    implementation firebase.analytics

    implementation retrofit.core
    implementation retrofit.logging
    implementation utils.timber
    coreLibraryDesugaring utils.desugar

    testImplementation test.junit
    androidTestImplementation test.androidxExt
    androidTestImplementation test.androidxEspresso
}